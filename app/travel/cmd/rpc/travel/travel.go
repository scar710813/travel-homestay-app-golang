// Code generated by goctl. DO NOT EDIT.
// Source: travel.proto

package travel

import (
	"context"

	"golodge/app/travel/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCommentReq        = pb.AddCommentReq
	AddCommentResp       = pb.AddCommentResp
	AddHomestayReq       = pb.AddHomestayReq
	AddHomestayResp      = pb.AddHomestayResp
	AddWishListReq       = pb.AddWishListReq
	AddWishListResp      = pb.AddWishListResp
	ClearHistoryReq      = pb.ClearHistoryReq
	ClearHistoryResp     = pb.ClearHistoryResp
	HistoryHomestay      = pb.HistoryHomestay
	HistoryListReq       = pb.HistoryListReq
	HistoryListResp      = pb.HistoryListResp
	Homestay             = pb.Homestay
	HomestayComment      = pb.HomestayComment
	HomestayDetailReq    = pb.HomestayDetailReq
	HomestayDetailResp   = pb.HomestayDetailResp
	RemoveHistoryReq     = pb.RemoveHistoryReq
	RemoveHistoryResp    = pb.RemoveHistoryResp
	RemoveWishListReq    = pb.RemoveWishListReq
	RemoveWishListResp   = pb.RemoveWishListResp
	SearchByLocationReq  = pb.SearchByLocationReq
	SearchByLocationResp = pb.SearchByLocationResp
	WishListReq          = pb.WishListReq
	WishListResp         = pb.WishListResp

	Travel interface {
		// homestayDetail
		HomestayDetail(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error)
		AddHomestay(ctx context.Context, in *AddHomestayReq, opts ...grpc.CallOption) (*AddHomestayResp, error)
		AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error)
		WishList(ctx context.Context, in *WishListReq, opts ...grpc.CallOption) (*WishListResp, error)
		AddWishList(ctx context.Context, in *AddWishListReq, opts ...grpc.CallOption) (*AddWishListResp, error)
		RemoveWishList(ctx context.Context, in *RemoveWishListReq, opts ...grpc.CallOption) (*RemoveWishListResp, error)
		HistoryList(ctx context.Context, in *HistoryListReq, opts ...grpc.CallOption) (*HistoryListResp, error)
		RemoveHistory(ctx context.Context, in *RemoveHistoryReq, opts ...grpc.CallOption) (*RemoveHistoryResp, error)
		ClearHistory(ctx context.Context, in *ClearHistoryReq, opts ...grpc.CallOption) (*ClearHistoryResp, error)
		SearchByLocation(ctx context.Context, in *SearchByLocationReq, opts ...grpc.CallOption) (*SearchByLocationResp, error)
	}

	defaultTravel struct {
		cli zrpc.Client
	}
)

func NewTravel(cli zrpc.Client) Travel {
	return &defaultTravel{
		cli: cli,
	}
}

// homestayDetail
func (m *defaultTravel) HomestayDetail(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HomestayDetail(ctx, in, opts...)
}

func (m *defaultTravel) AddHomestay(ctx context.Context, in *AddHomestayReq, opts ...grpc.CallOption) (*AddHomestayResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AddHomestay(ctx, in, opts...)
}

func (m *defaultTravel) AddComment(ctx context.Context, in *AddCommentReq, opts ...grpc.CallOption) (*AddCommentResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

func (m *defaultTravel) WishList(ctx context.Context, in *WishListReq, opts ...grpc.CallOption) (*WishListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.WishList(ctx, in, opts...)
}

func (m *defaultTravel) AddWishList(ctx context.Context, in *AddWishListReq, opts ...grpc.CallOption) (*AddWishListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.AddWishList(ctx, in, opts...)
}

func (m *defaultTravel) RemoveWishList(ctx context.Context, in *RemoveWishListReq, opts ...grpc.CallOption) (*RemoveWishListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.RemoveWishList(ctx, in, opts...)
}

func (m *defaultTravel) HistoryList(ctx context.Context, in *HistoryListReq, opts ...grpc.CallOption) (*HistoryListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HistoryList(ctx, in, opts...)
}

func (m *defaultTravel) RemoveHistory(ctx context.Context, in *RemoveHistoryReq, opts ...grpc.CallOption) (*RemoveHistoryResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.RemoveHistory(ctx, in, opts...)
}

func (m *defaultTravel) ClearHistory(ctx context.Context, in *ClearHistoryReq, opts ...grpc.CallOption) (*ClearHistoryResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.ClearHistory(ctx, in, opts...)
}

func (m *defaultTravel) SearchByLocation(ctx context.Context, in *SearchByLocationReq, opts ...grpc.CallOption) (*SearchByLocationResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.SearchByLocation(ctx, in, opts...)
}
