// Code generated by goctl. DO NOT EDIT.
// Source: travel.proto

package server

import (
	"context"

	"golodge/app/travel/cmd/rpc/internal/logic"
	"golodge/app/travel/cmd/rpc/internal/svc"
	"golodge/app/travel/cmd/rpc/pb"
)

type TravelServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTravelServer
}

func NewTravelServer(svcCtx *svc.ServiceContext) *TravelServer {
	return &TravelServer{
		svcCtx: svcCtx,
	}
}

// homestayDetail
func (s *TravelServer) HomestayDetail(ctx context.Context, in *pb.HomestayDetailReq) (*pb.HomestayDetailResp, error) {
	l := logic.NewHomestayDetailLogic(ctx, s.svcCtx)
	return l.HomestayDetail(in)
}

func (s *TravelServer) AddHomestay(ctx context.Context, in *pb.AddHomestayReq) (*pb.AddHomestayResp, error) {
	l := logic.NewAddHomestayLogic(ctx, s.svcCtx)
	return l.AddHomestay(in)
}

func (s *TravelServer) AddComment(ctx context.Context, in *pb.AddCommentReq) (*pb.AddCommentResp, error) {
	l := logic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

func (s *TravelServer) LikeComment(ctx context.Context, in *pb.LikeCommentReq) (*pb.LikeCommentResp, error) {
	l := logic.NewLikeCommentLogic(ctx, s.svcCtx)
	return l.LikeComment(in)
}

func (s *TravelServer) WishList(ctx context.Context, in *pb.WishListReq) (*pb.WishListResp, error) {
	l := logic.NewWishListLogic(ctx, s.svcCtx)
	return l.WishList(in)
}

func (s *TravelServer) AddWishList(ctx context.Context, in *pb.AddWishListReq) (*pb.AddWishListResp, error) {
	l := logic.NewAddWishListLogic(ctx, s.svcCtx)
	return l.AddWishList(in)
}

func (s *TravelServer) RemoveWishList(ctx context.Context, in *pb.RemoveWishListReq) (*pb.RemoveWishListResp, error) {
	l := logic.NewRemoveWishListLogic(ctx, s.svcCtx)
	return l.RemoveWishList(in)
}

func (s *TravelServer) HistoryList(ctx context.Context, in *pb.HistoryListReq) (*pb.HistoryListResp, error) {
	l := logic.NewHistoryListLogic(ctx, s.svcCtx)
	return l.HistoryList(in)
}

func (s *TravelServer) RemoveHistory(ctx context.Context, in *pb.RemoveHistoryReq) (*pb.RemoveHistoryResp, error) {
	l := logic.NewRemoveHistoryLogic(ctx, s.svcCtx)
	return l.RemoveHistory(in)
}

func (s *TravelServer) ClearHistory(ctx context.Context, in *pb.ClearHistoryReq) (*pb.ClearHistoryResp, error) {
	l := logic.NewClearHistoryLogic(ctx, s.svcCtx)
	return l.ClearHistory(in)
}

func (s *TravelServer) SearchByLocation(ctx context.Context, in *pb.SearchByLocationReq) (*pb.SearchByLocationResp, error) {
	l := logic.NewSearchByLocationLogic(ctx, s.svcCtx)
	return l.SearchByLocation(in)
}
